@page "/Login"

@using PriceHunter.Web.Data.Login
@inject ILocalStorageService _localStorage
@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authStateProvider 
@inject IHttpRequester _httpRequester
@inject IToastService _toastService

<h3>Login</h3>

<EditForm Model="model" OnValidSubmit="@HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="model.Email" class="form-control" style="width:50%;"></InputText>
    </div>
    <div>
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="model.Password" type="password" class="form-control" style="width:50%;"></InputText>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    GetTokenRequest model = new GetTokenRequest();

    private async void HandleLogin()
    {
        try
        { 
            var result = await _httpRequester.PostAsync<GetTokenRequest, GetTokenResponse>(ApiUrls.V1ApiTokenUrl, model, false);
            if (result.IsSuccess)
            {
                await _localStorage.SetItemAsync<GetTokenResponse>(AppConstants.TokenStorageKey, result.Response.Data);
                await _authStateProvider.GetAuthenticationStateAsync();
                _navigationManager.NavigateTo(NavigationConstants.UserProfile);
            } 
        }
        catch (Exception ex)
        {
            _toastService.ShowError(ex.Message);
        }
    }
}
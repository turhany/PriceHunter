version: '3.4'

networks:
  bridge-network:
    driver: bridge

services:
  
  PriceHunter.web:
    image: ${DOCKER_REGISTRY-}pricehunterweb
    restart: always
    depends_on:
      - "PriceHunter.api"
    build:
      context: .
      dockerfile: PriceHunter.Web/Dockerfile
    ports:
      - "5260:80"    
    networks:
      - bridge-network
  
  PriceHunter.api:
    image: ${DOCKER_REGISTRY-}pricehunterapi
    restart : always
    depends_on:
      - "database_mongo"
      - "database_redis"
      - "message_rabbitmq"
    build:
      context: .
      dockerfile: PriceHunter.Api/Dockerfile
    ports:
      - "5010:80"
    environment:
      ASPNETCORE_ENVIRONMENT: "DockerCompose"
    networks:
      - bridge-network
     
  PriceHunter.scheduleService:
     image: ${DOCKER_REGISTRY-}pricehunterscheduleservice
     restart: always
     depends_on:
       - "database_mongo"
       - "database_redis"
       - "message_rabbitmq"
     build:
       context: .
       dockerfile: PriceHunter.ScheduleService/Dockerfile
     ports:
       - "5001:80"
     environment:
       ASPNETCORE_ENVIRONMENT: "DockerCompose"
     networks:
       - bridge-network

  PriceHunter.consumer.notification:
    image: ${DOCKER_REGISTRY-}pricehunterconsumernotification
    restart: always
    depends_on:
      - "database_mongo"
      - "database_redis"
      - "message_rabbitmq"
    build:
      context: .
      dockerfile: PriceHunter.Consumer.Notification/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "DockerCompose"
    networks:
      - bridge-network
  
  PriceHunter.consumer.parser:
    image: ${DOCKER_REGISTRY-}pricehunterconsumerparser
    restart: always
    depends_on:
      - "database_mongo"
      - "database_redis"
      - "message_rabbitmq"
    build:
      context: .
      dockerfile: PriceHunter.Consumer.Parser/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "DockerCompose"
    networks:
      - bridge-network

  database_mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    restart: always
    networks:
      - bridge-network
    environment:      
      MONGO_INITDB_DATABASE: PriceHunterDB

  database_redis:
    image: "redis:alpine"
    command: redis-server --requirepass 123456789.tY
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - bridge-network

  message_rabbitmq:
    image: "rabbitmq:3.8.3-management"
    #    container_name: rabbitmq_docker
    #    hostname: rabbitmq
    ports:
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "turhany"
      RABBITMQ_DEFAULT_PASS: "turhany"
      RABBITMQ_DEFAULT_VHOST: "pricehunter"
    networks:
      - bridge-network
2022-08-28 16:11:25.030 +03:00 [WRN] No XML encryptor configured. Key {b07bd75d-1f70-4c74-ade2-3f869e4bae40} may be persisted to storage in unencrypted form.
2022-08-28 16:11:25.050 +03:00 [DBG] Starting bus instances: IBus
2022-08-28 16:11:25.052 +03:00 [DBG] Starting bus: "rabbitmq://localhost/"
2022-08-28 16:11:25.116 +03:00 [INF] Initializing UI Database
2022-08-28 16:11:25.137 +03:00 [DBG] Connect: guest@localhost:5672/
2022-08-28 16:11:25.240 +03:00 [DBG] Connected: guest@localhost:5672/ (address: amqp://localhost:5672, local: 49431)
2022-08-28 16:11:25.366 +03:00 [DBG] Endpoint Ready: "rabbitmq://localhost/TurhansMacBookAir_PriceHunterApi_bus_6adoyygzxh7n99ywbdpet7sxdn?temporary=true"
2022-08-28 16:11:25.369 +03:00 [INF] Bus started: "rabbitmq://localhost/"
2022-08-28 16:11:25.564 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:11:25.645 +03:00 [INF] Saving healthchecks configuration to database
2022-08-28 16:11:25.687 +03:00 [INF] Saved 1 entities to in-memory store.
2022-08-28 16:11:25.727 +03:00 [INF] Now listening on: http://localhost:5010
2022-08-28 16:11:25.745 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:11:25.750 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:11:25.812 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-28 16:11:25.812 +03:00 [INF] Hosting environment: Development
2022-08-28 16:11:25.812 +03:00 [INF] Content root path: /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/
2022-08-28 16:11:26.456 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:11:26.457 +03:00 [DBG] Creating a new HealthReport history.
2022-08-28 16:11:26.486 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:11:26.486 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:11:26.486 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:11:36.492 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:11:36.519 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:11:36.540 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:11:36.556 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:11:36.560 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:11:36.560 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:11:36.560 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:11:46.565 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:11:46.566 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:11:46.648 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:11:46.648 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:11:46.648 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:11:46.649 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:11:46.649 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:11:56.656 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:11:56.658 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:11:56.902 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:11:56.903 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:11:56.903 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:11:56.903 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:11:56.903 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:12:06.909 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:12:06.910 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:12:07.071 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:12:07.072 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:12:07.073 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:12:07.073 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:12:07.073 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:12:17.077 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:12:17.079 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:12:17.174 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:12:17.175 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:12:17.175 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:12:17.175 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:12:17.175 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:12:27.054 +03:00 [ERR] Value cannot be null. (Parameter 'configuration')
System.ArgumentNullException: Value cannot be null. (Parameter 'configuration')
   at StackExchange.Redis.ConnectionMultiplexer.CreateMultiplexer(Object configuration) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 834
   at StackExchange.Redis.ConnectionMultiplexer.ConnectAsync(String configuration, TextWriter log) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 794
   at Microsoft.Extensions.Caching.Redis.RedisCache.ConnectAsync(CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at PriceHunter.Cache.Concrete.RedisCacheService.ExistObjectAsync[T](String key) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 62
   at PriceHunter.Cache.Concrete.RedisCacheService.GetOrSetObjectAsync[T](String key, Func`1 code, Int32 durationAsMinute) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 32
   at PriceHunter.Business.User.Concrete.UserService.GetAsync(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Business/User/Concrete/UserService.cs:line 68
   at PriceHunter.Api.Controllers.V1.UsersController.Get(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Controllers/V1/UsersController.cs:line 36
   at lambda_method920(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at AspNetCoreRateLimit.RateLimitMiddleware`1.Invoke(HttpContext context) in C:\Users\User\Documents\Github\AspNetCoreRateLimit\src\AspNetCoreRateLimit\Middleware\RateLimitMiddleware.cs:line 124
   at PriceHunter.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(HttpContext httpContext) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Middlewares/ExceptionHandlerMiddleware.cs:line 39
2022-08-28 16:12:27.177 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:12:27.178 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:12:27.262 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:12:27.262 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:12:27.263 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:12:27.263 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:12:27.263 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:12:36.004 +03:00 [ERR] Value cannot be null. (Parameter 'configuration')
System.ArgumentNullException: Value cannot be null. (Parameter 'configuration')
   at StackExchange.Redis.ConnectionMultiplexer.CreateMultiplexer(Object configuration) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 834
   at StackExchange.Redis.ConnectionMultiplexer.ConnectAsync(String configuration, TextWriter log) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 794
   at Microsoft.Extensions.Caching.Redis.RedisCache.ConnectAsync(CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at PriceHunter.Cache.Concrete.RedisCacheService.ExistObjectAsync[T](String key) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 62
   at PriceHunter.Cache.Concrete.RedisCacheService.GetOrSetObjectAsync[T](String key, Func`1 code, Int32 durationAsMinute) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 32
   at PriceHunter.Business.UserProduct.Concrete.UserProductService.GetAsync(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Business/UserProduct/Concrete/UserProductService.cs:line 69
   at PriceHunter.Api.Controllers.V1.UserProductsController.Get(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Controllers/V1/UserProductsController.cs:line 37
   at lambda_method972(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at AspNetCoreRateLimit.RateLimitMiddleware`1.Invoke(HttpContext context) in C:\Users\User\Documents\Github\AspNetCoreRateLimit\src\AspNetCoreRateLimit\Middleware\RateLimitMiddleware.cs:line 124
   at PriceHunter.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(HttpContext httpContext) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Middlewares/ExceptionHandlerMiddleware.cs:line 39
2022-08-28 16:12:36.158 +03:00 [ERR] Value cannot be null. (Parameter 'configuration')
System.ArgumentNullException: Value cannot be null. (Parameter 'configuration')
   at StackExchange.Redis.ConnectionMultiplexer.CreateMultiplexer(Object configuration) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 834
   at StackExchange.Redis.ConnectionMultiplexer.ConnectAsync(String configuration, TextWriter log) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 794
   at Microsoft.Extensions.Caching.Redis.RedisCache.ConnectAsync(CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at PriceHunter.Cache.Concrete.RedisCacheService.ExistObjectAsync[T](String key) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 62
   at PriceHunter.Cache.Concrete.RedisCacheService.GetOrSetObjectAsync[T](String key, Func`1 code, Int32 durationAsMinute) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 19
   at PriceHunter.Business.Supplier.Concrete.SupplierService.GetAllAsync() in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Business/Supplier/Concrete/SupplierService.cs:line 30
   at PriceHunter.Api.Controllers.V1.SuppliersController.All() in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Controllers/V1/SuppliersController.cs:line 34
   at lambda_method980(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at AspNetCoreRateLimit.RateLimitMiddleware`1.Invoke(HttpContext context) in C:\Users\User\Documents\Github\AspNetCoreRateLimit\src\AspNetCoreRateLimit\Middleware\RateLimitMiddleware.cs:line 124
   at PriceHunter.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(HttpContext httpContext) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Middlewares/ExceptionHandlerMiddleware.cs:line 39
2022-08-28 16:12:37.269 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:12:37.269 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:12:37.276 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:12:37.276 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:12:37.276 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:12:37.276 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:12:37.276 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:12:47.281 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:12:47.282 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:12:47.292 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:12:47.292 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:12:47.293 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:12:47.293 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:12:47.293 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:12:51.312 +03:00 [ERR] Value cannot be null. (Parameter 'configuration')
System.ArgumentNullException: Value cannot be null. (Parameter 'configuration')
   at StackExchange.Redis.ConnectionMultiplexer.CreateMultiplexer(Object configuration) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 834
   at StackExchange.Redis.ConnectionMultiplexer.ConnectAsync(String configuration, TextWriter log) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 794
   at Microsoft.Extensions.Caching.Redis.RedisCache.ConnectAsync(CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at PriceHunter.Cache.Concrete.RedisCacheService.ExistObjectAsync[T](String key) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 62
   at PriceHunter.Cache.Concrete.RedisCacheService.GetOrSetObjectAsync[T](String key, Func`1 code, Int32 durationAsMinute) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 32
   at PriceHunter.Business.UserProduct.Concrete.UserProductService.GetAsync(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Business/UserProduct/Concrete/UserProductService.cs:line 69
   at PriceHunter.Api.Controllers.V1.UserProductsController.Get(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Controllers/V1/UserProductsController.cs:line 37
   at lambda_method972(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at AspNetCoreRateLimit.RateLimitMiddleware`1.Invoke(HttpContext context) in C:\Users\User\Documents\Github\AspNetCoreRateLimit\src\AspNetCoreRateLimit\Middleware\RateLimitMiddleware.cs:line 124
   at PriceHunter.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(HttpContext httpContext) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Middlewares/ExceptionHandlerMiddleware.cs:line 39
2022-08-28 16:12:51.530 +03:00 [ERR] Value cannot be null. (Parameter 'configuration')
System.ArgumentNullException: Value cannot be null. (Parameter 'configuration')
   at StackExchange.Redis.ConnectionMultiplexer.CreateMultiplexer(Object configuration) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 834
   at StackExchange.Redis.ConnectionMultiplexer.ConnectAsync(String configuration, TextWriter log) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 794
   at Microsoft.Extensions.Caching.Redis.RedisCache.ConnectAsync(CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at PriceHunter.Cache.Concrete.RedisCacheService.ExistObjectAsync[T](String key) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 62
   at PriceHunter.Cache.Concrete.RedisCacheService.GetOrSetObjectAsync[T](String key, Func`1 code, Int32 durationAsMinute) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 19
   at PriceHunter.Business.Supplier.Concrete.SupplierService.GetAllAsync() in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Business/Supplier/Concrete/SupplierService.cs:line 30
   at PriceHunter.Api.Controllers.V1.SuppliersController.All() in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Controllers/V1/SuppliersController.cs:line 34
   at lambda_method980(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at AspNetCoreRateLimit.RateLimitMiddleware`1.Invoke(HttpContext context) in C:\Users\User\Documents\Github\AspNetCoreRateLimit\src\AspNetCoreRateLimit\Middleware\RateLimitMiddleware.cs:line 124
   at PriceHunter.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(HttpContext httpContext) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Middlewares/ExceptionHandlerMiddleware.cs:line 39
2022-08-28 16:12:57.298 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:12:57.300 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:12:57.338 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:12:57.339 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:12:57.339 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:12:57.339 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:12:57.339 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:13:07.341 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:13:07.343 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:13:07.376 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:13:07.376 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:13:07.376 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:13:07.377 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:13:07.377 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:13:17.379 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:13:17.380 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:13:17.465 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:13:17.466 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:13:17.466 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:13:17.467 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:13:17.467 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:13:27.472 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:13:27.473 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:13:27.610 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:13:27.610 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:13:27.610 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:13:27.611 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:13:27.611 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:13:37.615 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:13:37.618 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:13:37.703 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:13:37.704 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:13:37.705 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:13:37.705 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:13:37.705 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:13:51.132 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:13:52.539 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:13:55.060 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:13:55.070 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:13:55.079 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:13:55.079 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:13:55.079 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:14:01.183 +03:00 [ERR] Value cannot be null. (Parameter 'configuration')
System.ArgumentNullException: Value cannot be null. (Parameter 'configuration')
   at StackExchange.Redis.ConnectionMultiplexer.CreateMultiplexer(Object configuration) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 834
   at StackExchange.Redis.ConnectionMultiplexer.ConnectAsync(String configuration, TextWriter log) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 794
   at Microsoft.Extensions.Caching.Redis.RedisCache.ConnectAsync(CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at PriceHunter.Cache.Concrete.RedisCacheService.ExistObjectAsync[T](String key) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 62
   at PriceHunter.Cache.Concrete.RedisCacheService.GetOrSetObjectAsync[T](String key, Func`1 code, Int32 durationAsMinute) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 32
   at PriceHunter.Business.UserProduct.Concrete.UserProductService.GetAsync(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Business/UserProduct/Concrete/UserProductService.cs:line 69
   at PriceHunter.Api.Controllers.V1.UserProductsController.Get(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Controllers/V1/UserProductsController.cs:line 37
   at lambda_method972(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at AspNetCoreRateLimit.RateLimitMiddleware`1.Invoke(HttpContext context) in C:\Users\User\Documents\Github\AspNetCoreRateLimit\src\AspNetCoreRateLimit\Middleware\RateLimitMiddleware.cs:line 124
   at PriceHunter.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(HttpContext httpContext) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Middlewares/ExceptionHandlerMiddleware.cs:line 39
2022-08-28 16:14:01.566 +03:00 [ERR] Value cannot be null. (Parameter 'configuration')
System.ArgumentNullException: Value cannot be null. (Parameter 'configuration')
   at StackExchange.Redis.ConnectionMultiplexer.CreateMultiplexer(Object configuration) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 834
   at StackExchange.Redis.ConnectionMultiplexer.ConnectAsync(String configuration, TextWriter log) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 794
   at Microsoft.Extensions.Caching.Redis.RedisCache.ConnectAsync(CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at PriceHunter.Cache.Concrete.RedisCacheService.ExistObjectAsync[T](String key) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 62
   at PriceHunter.Cache.Concrete.RedisCacheService.GetOrSetObjectAsync[T](String key, Func`1 code, Int32 durationAsMinute) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 19
   at PriceHunter.Business.Supplier.Concrete.SupplierService.GetAllAsync() in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Business/Supplier/Concrete/SupplierService.cs:line 30
   at PriceHunter.Api.Controllers.V1.SuppliersController.All() in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Controllers/V1/SuppliersController.cs:line 34
   at lambda_method980(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at AspNetCoreRateLimit.RateLimitMiddleware`1.Invoke(HttpContext context) in C:\Users\User\Documents\Github\AspNetCoreRateLimit\src\AspNetCoreRateLimit\Middleware\RateLimitMiddleware.cs:line 124
   at PriceHunter.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(HttpContext httpContext) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Middlewares/ExceptionHandlerMiddleware.cs:line 39
2022-08-28 16:14:05.082 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:14:05.083 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:14:05.114 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:14:05.114 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:14:05.114 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:14:05.114 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:14:05.114 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:14:15.117 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:14:15.118 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:14:15.217 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:14:15.217 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:14:15.217 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:14:15.217 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:14:15.217 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:14:25.223 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:14:25.228 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:14:25.384 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:14:25.384 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:14:25.385 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:14:25.385 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:14:25.385 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:15:12.406 +03:00 [ERR] Value cannot be null. (Parameter 'configuration')
System.ArgumentNullException: Value cannot be null. (Parameter 'configuration')
   at StackExchange.Redis.ConnectionMultiplexer.CreateMultiplexer(Object configuration) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 834
   at StackExchange.Redis.ConnectionMultiplexer.ConnectAsync(String configuration, TextWriter log) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 794
   at Microsoft.Extensions.Caching.Redis.RedisCache.ConnectAsync(CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at PriceHunter.Cache.Concrete.RedisCacheService.ExistObjectAsync[T](String key) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 62
   at PriceHunter.Cache.Concrete.RedisCacheService.GetOrSetObjectAsync[T](String key, Func`1 code, Int32 durationAsMinute) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 32
   at PriceHunter.Business.UserProduct.Concrete.UserProductService.GetAsync(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Business/UserProduct/Concrete/UserProductService.cs:line 69
   at PriceHunter.Api.Controllers.V1.UserProductsController.Get(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Controllers/V1/UserProductsController.cs:line 37
   at lambda_method972(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at AspNetCoreRateLimit.RateLimitMiddleware`1.Invoke(HttpContext context) in C:\Users\User\Documents\Github\AspNetCoreRateLimit\src\AspNetCoreRateLimit\Middleware\RateLimitMiddleware.cs:line 124
   at PriceHunter.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(HttpContext httpContext) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Middlewares/ExceptionHandlerMiddleware.cs:line 39
2022-08-28 16:15:12.458 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:15:12.605 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:15:12.985 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:15:13.068 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:15:13.087 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:15:13.157 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:15:13.158 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:15:20.379 +03:00 [ERR] Value cannot be null. (Parameter 'configuration')
System.ArgumentNullException: Value cannot be null. (Parameter 'configuration')
   at StackExchange.Redis.ConnectionMultiplexer.CreateMultiplexer(Object configuration) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 834
   at StackExchange.Redis.ConnectionMultiplexer.ConnectAsync(String configuration, TextWriter log) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 794
   at Microsoft.Extensions.Caching.Redis.RedisCache.ConnectAsync(CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at PriceHunter.Cache.Concrete.RedisCacheService.ExistObjectAsync[T](String key) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 62
   at PriceHunter.Cache.Concrete.RedisCacheService.GetOrSetObjectAsync[T](String key, Func`1 code, Int32 durationAsMinute) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 19
   at PriceHunter.Business.Supplier.Concrete.SupplierService.GetAllAsync() in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Business/Supplier/Concrete/SupplierService.cs:line 30
   at PriceHunter.Api.Controllers.V1.SuppliersController.All() in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Controllers/V1/SuppliersController.cs:line 34
   at lambda_method980(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at AspNetCoreRateLimit.RateLimitMiddleware`1.Invoke(HttpContext context) in C:\Users\User\Documents\Github\AspNetCoreRateLimit\src\AspNetCoreRateLimit\Middleware\RateLimitMiddleware.cs:line 124
   at PriceHunter.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(HttpContext httpContext) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Middlewares/ExceptionHandlerMiddleware.cs:line 39
2022-08-28 16:15:23.161 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:15:23.164 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:15:23.176 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:15:23.177 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:15:23.177 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:15:23.177 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:15:23.177 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:15:33.183 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:15:33.184 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:15:33.318 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:15:33.319 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:15:33.319 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:15:33.319 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:15:33.319 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:15:43.325 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:15:43.327 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:15:43.440 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:15:43.440 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:15:43.441 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:15:43.441 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:15:43.441 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:15:53.443 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:15:53.444 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:15:53.476 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:15:53.476 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:15:53.477 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:15:53.477 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:15:53.477 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:16:03.480 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:16:03.482 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:16:03.543 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:16:03.544 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:16:03.544 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:16:03.544 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:16:03.544 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:17:04.468 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:17:04.570 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:17:06.070 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:17:06.100 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:17:09.137 +03:00 [ERR] Value cannot be null. (Parameter 'configuration')
System.ArgumentNullException: Value cannot be null. (Parameter 'configuration')
   at StackExchange.Redis.ConnectionMultiplexer.CreateMultiplexer(Object configuration) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 834
   at StackExchange.Redis.ConnectionMultiplexer.ConnectAsync(String configuration, TextWriter log) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 794
   at Microsoft.Extensions.Caching.Redis.RedisCache.ConnectAsync(CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at PriceHunter.Cache.Concrete.RedisCacheService.ExistObjectAsync[T](String key) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 62
   at PriceHunter.Cache.Concrete.RedisCacheService.GetOrSetObjectAsync[T](String key, Func`1 code, Int32 durationAsMinute) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 32
   at PriceHunter.Business.UserProduct.Concrete.UserProductService.GetAsync(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Business/UserProduct/Concrete/UserProductService.cs:line 69
   at PriceHunter.Api.Controllers.V1.UserProductsController.Get(Guid id) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Controllers/V1/UserProductsController.cs:line 37
   at lambda_method972(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at AspNetCoreRateLimit.RateLimitMiddleware`1.Invoke(HttpContext context) in C:\Users\User\Documents\Github\AspNetCoreRateLimit\src\AspNetCoreRateLimit\Middleware\RateLimitMiddleware.cs:line 124
   at PriceHunter.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(HttpContext httpContext) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Middlewares/ExceptionHandlerMiddleware.cs:line 39
2022-08-28 16:17:09.137 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:17:09.139 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:17:09.139 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:17:13.185 +03:00 [ERR] Value cannot be null. (Parameter 'configuration')
System.ArgumentNullException: Value cannot be null. (Parameter 'configuration')
   at StackExchange.Redis.ConnectionMultiplexer.CreateMultiplexer(Object configuration) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 834
   at StackExchange.Redis.ConnectionMultiplexer.ConnectAsync(String configuration, TextWriter log) in c:\code\StackExchange.Redis\StackExchange.Redis\StackExchange\Redis\ConnectionMultiplexer.cs:line 794
   at Microsoft.Extensions.Caching.Redis.RedisCache.ConnectAsync(CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.Redis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at PriceHunter.Cache.Concrete.RedisCacheService.ExistObjectAsync[T](String key) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 62
   at PriceHunter.Cache.Concrete.RedisCacheService.GetOrSetObjectAsync[T](String key, Func`1 code, Int32 durationAsMinute) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Cache.Redis/Concrete/RedisCacheService.cs:line 19
   at PriceHunter.Business.Supplier.Concrete.SupplierService.GetAllAsync() in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Business/Supplier/Concrete/SupplierService.cs:line 30
   at PriceHunter.Api.Controllers.V1.SuppliersController.All() in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Controllers/V1/SuppliersController.cs:line 34
   at lambda_method980(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at AspNetCoreRateLimit.RateLimitMiddleware`1.Invoke(HttpContext context) in C:\Users\User\Documents\Github\AspNetCoreRateLimit\src\AspNetCoreRateLimit\Middleware\RateLimitMiddleware.cs:line 124
   at PriceHunter.Api.Middlewares.ExceptionHandlerMiddleware.InvokeAsync(HttpContext httpContext) in /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/Middlewares/ExceptionHandlerMiddleware.cs:line 39
2022-08-28 16:17:19.144 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:17:19.146 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:17:19.229 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:17:19.229 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:17:19.229 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:17:19.230 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:17:19.230 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:17:29.232 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:17:29.233 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:17:29.346 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:17:29.346 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:17:29.346 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:17:29.346 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:17:29.346 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:24:49.414 +03:00 [DBG] Starting bus instances: IBus
2022-08-28 16:24:49.427 +03:00 [DBG] Starting bus: "rabbitmq://localhost/"
2022-08-28 16:24:49.489 +03:00 [INF] Initializing UI Database
2022-08-28 16:24:49.536 +03:00 [DBG] Connect: guest@localhost:5672/
2022-08-28 16:24:49.609 +03:00 [DBG] Connected: guest@localhost:5672/ (address: amqp://localhost:5672, local: 50389)
2022-08-28 16:24:49.726 +03:00 [DBG] Endpoint Ready: "rabbitmq://localhost/TurhansMacBookAir_PriceHunterApi_bus_hcfoyygzxh7n9awhbdpet6fqgs?temporary=true"
2022-08-28 16:24:49.728 +03:00 [INF] Bus started: "rabbitmq://localhost/"
2022-08-28 16:24:49.894 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:24:49.961 +03:00 [INF] Saving healthchecks configuration to database
2022-08-28 16:24:49.994 +03:00 [INF] Saved 1 entities to in-memory store.
2022-08-28 16:24:50.029 +03:00 [INF] Now listening on: http://localhost:5010
2022-08-28 16:24:50.036 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:24:50.040 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:24:50.095 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-28 16:24:50.095 +03:00 [INF] Hosting environment: Development
2022-08-28 16:24:50.095 +03:00 [INF] Content root path: /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/
2022-08-28 16:24:50.537 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:24:50.537 +03:00 [DBG] Creating a new HealthReport history.
2022-08-28 16:24:50.558 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:24:50.558 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:24:50.558 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:25:00.562 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:25:00.592 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:25:00.642 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:25:00.643 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:25:00.646 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:25:00.647 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:25:00.647 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:25:10.651 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:25:10.653 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:25:10.760 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:25:10.760 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:25:10.761 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:25:10.761 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:25:10.761 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:25:20.762 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:25:20.764 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:25:20.976 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:25:20.976 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:25:20.977 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:25:20.977 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:25:20.977 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:25:30.979 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:25:30.981 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:25:31.024 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:25:31.024 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:25:31.025 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:25:31.025 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:25:31.025 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:26:07.721 +03:00 [DBG] Starting bus instances: IBus
2022-08-28 16:26:07.741 +03:00 [DBG] Starting bus: "rabbitmq://localhost/"
2022-08-28 16:26:07.752 +03:00 [INF] Initializing UI Database
2022-08-28 16:26:07.762 +03:00 [DBG] Connect: guest@localhost:5672/
2022-08-28 16:26:07.801 +03:00 [DBG] Connected: guest@localhost:5672/ (address: amqp://localhost:5672, local: 50430)
2022-08-28 16:26:07.820 +03:00 [DBG] Endpoint Ready: "rabbitmq://localhost/TurhansMacBookAir_PriceHunterApi_bus_pegyyygzxh7n6drqbdpet6g7rn?temporary=true"
2022-08-28 16:26:07.822 +03:00 [INF] Bus started: "rabbitmq://localhost/"
2022-08-28 16:26:08.175 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:26:08.260 +03:00 [INF] Saving healthchecks configuration to database
2022-08-28 16:26:08.320 +03:00 [INF] Saved 1 entities to in-memory store.
2022-08-28 16:26:08.353 +03:00 [INF] Now listening on: http://localhost:5010
2022-08-28 16:26:08.357 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:26:08.366 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:26:08.433 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-28 16:26:08.433 +03:00 [INF] Hosting environment: Development
2022-08-28 16:26:08.433 +03:00 [INF] Content root path: /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/
2022-08-28 16:26:08.910 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:26:08.912 +03:00 [DBG] Creating a new HealthReport history.
2022-08-28 16:26:08.966 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:26:08.967 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:26:08.968 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:26:18.973 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:26:19.013 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:26:19.034 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:26:19.035 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:26:19.040 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:26:19.040 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:26:19.040 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:26:29.042 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:26:29.045 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:26:29.060 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:26:29.060 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:26:29.062 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:26:29.062 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:26:29.062 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:26:39.064 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:26:39.068 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:26:39.082 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:26:39.082 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:26:39.084 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:26:39.084 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:26:39.084 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:26:49.089 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:26:49.095 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:26:49.110 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:26:49.112 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:26:49.112 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:26:49.113 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:26:49.113 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:26:59.117 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:26:59.118 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:26:59.128 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:26:59.129 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:26:59.129 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:26:59.129 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:26:59.129 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:27:09.135 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:27:09.137 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:27:09.149 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:27:09.149 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:27:09.150 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:27:09.150 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:27:09.150 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:27:19.155 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:27:19.157 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:27:19.167 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:27:19.168 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:27:19.169 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:27:19.169 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:27:19.169 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:27:29.169 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:27:29.170 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:27:29.181 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:27:29.181 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:27:29.182 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:27:29.182 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:27:29.182 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:27:36.454 +03:00 [INF] Application is shutting down...
2022-08-28 16:27:36.473 +03:00 [DBG] Stopping bus instances: IBus
2022-08-28 16:27:36.479 +03:00 [DBG] Stopping bus: "rabbitmq://localhost/"
2022-08-28 16:27:36.487 +03:00 [DBG] Endpoint Stopping: "rabbitmq://localhost/TurhansMacBookAir_PriceHunterApi_bus_pegyyygzxh7n6drqbdpet6g7rn?temporary=true"
2022-08-28 16:27:36.489 +03:00 [DBG] Stopping receive transport: "rabbitmq://localhost/TurhansMacBookAir_PriceHunterApi_bus_pegyyygzxh7n6drqbdpet6g7rn?temporary=true"
2022-08-28 16:27:36.491 +03:00 [DBG] Endpoint Completed: "rabbitmq://localhost/TurhansMacBookAir_PriceHunterApi_bus_pegyyygzxh7n6drqbdpet6g7rn?temporary=true"
2022-08-28 16:27:36.519 +03:00 [DBG] Disconnect: guest@localhost:5672/
2022-08-28 16:27:36.524 +03:00 [DBG] Disconnected: guest@localhost:5672/
2022-08-28 16:27:36.525 +03:00 [INF] Bus stopped: "rabbitmq://localhost/"
2022-08-28 16:29:03.895 +03:00 [DBG] Starting bus instances: IBus
2022-08-28 16:29:03.909 +03:00 [DBG] Starting bus: "rabbitmq://localhost/"
2022-08-28 16:29:03.943 +03:00 [INF] Initializing UI Database
2022-08-28 16:29:03.961 +03:00 [DBG] Connect: guest@localhost:5672/
2022-08-28 16:29:04.059 +03:00 [DBG] Connected: guest@localhost:5672/ (address: amqp://localhost:5672, local: 50507)
2022-08-28 16:29:04.225 +03:00 [DBG] Endpoint Ready: "rabbitmq://localhost/TurhansMacBookAir_PriceHunterApi_bus_rcgoyygzxh7n948rbdpet6kgrg?temporary=true"
2022-08-28 16:29:04.227 +03:00 [INF] Bus started: "rabbitmq://localhost/"
2022-08-28 16:29:04.398 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:29:04.461 +03:00 [INF] Saving healthchecks configuration to database
2022-08-28 16:29:04.494 +03:00 [INF] Saved 1 entities to in-memory store.
2022-08-28 16:29:04.525 +03:00 [INF] Now listening on: http://localhost:5010
2022-08-28 16:29:04.532 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:29:04.536 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:29:04.566 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-28 16:29:04.566 +03:00 [INF] Hosting environment: Development
2022-08-28 16:29:04.566 +03:00 [INF] Content root path: /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/
2022-08-28 16:29:05.016 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:29:05.017 +03:00 [DBG] Creating a new HealthReport history.
2022-08-28 16:29:05.038 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:29:05.038 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:29:05.039 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:29:15.040 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:29:15.063 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:29:15.084 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:29:15.084 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:29:15.088 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:29:15.089 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:29:15.089 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:29:25.093 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:29:25.097 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:29:25.193 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:29:25.193 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:29:25.193 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:29:25.193 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:29:25.193 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:29:35.195 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:29:35.197 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:29:35.212 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:29:35.212 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:29:35.212 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:29:35.213 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:29:35.213 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:30:07.767 +03:00 [DBG] Starting bus instances: IBus
2022-08-28 16:30:07.781 +03:00 [DBG] Starting bus: "rabbitmq://localhost/"
2022-08-28 16:30:07.818 +03:00 [INF] Initializing UI Database
2022-08-28 16:30:07.838 +03:00 [DBG] Connect: guest@localhost:5672/
2022-08-28 16:30:07.914 +03:00 [DBG] Connected: guest@localhost:5672/ (address: amqp://localhost:5672, local: 50547)
2022-08-28 16:30:08.032 +03:00 [DBG] Endpoint Ready: "rabbitmq://localhost/TurhansMacBookAir_PriceHunterApi_bus_iogoyygzxh7n91cybdpet6mcra?temporary=true"
2022-08-28 16:30:08.034 +03:00 [INF] Bus started: "rabbitmq://localhost/"
2022-08-28 16:30:08.200 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:30:08.267 +03:00 [INF] Saving healthchecks configuration to database
2022-08-28 16:30:08.300 +03:00 [INF] Saved 1 entities to in-memory store.
2022-08-28 16:30:08.332 +03:00 [INF] Now listening on: http://localhost:5010
2022-08-28 16:30:08.338 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:30:08.342 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:30:08.397 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2022-08-28 16:30:08.397 +03:00 [INF] Hosting environment: Development
2022-08-28 16:30:08.397 +03:00 [INF] Content root path: /Users/turhany/Desktop/Projects/PriceHunter/src/PriceHunter.Api/
2022-08-28 16:30:09.023 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:30:09.024 +03:00 [DBG] Creating a new HealthReport history.
2022-08-28 16:30:09.117 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:30:09.117 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:30:09.118 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:30:19.123 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:30:19.151 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:30:19.196 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:30:19.196 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:30:19.200 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:30:19.201 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:30:19.201 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:30:29.202 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:30:29.205 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:30:29.252 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:30:29.252 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:30:29.253 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:30:29.253 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:30:29.253 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:30:48.415 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:30:48.440 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:30:48.531 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:30:48.532 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:30:48.532 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:30:48.532 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:30:48.532 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:30:58.538 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:30:58.541 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:30:58.605 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:30:58.606 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:30:58.607 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:30:58.607 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:30:58.607 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
2022-08-28 16:31:08.607 +03:00 [DBG] Executing HealthCheck collector HostedService.
2022-08-28 16:31:08.611 +03:00 [INF] Entity Framework Core 6.0.7 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.InMemory:6.0.7' with options: StoreName=HealthChecksUI 
2022-08-28 16:31:08.622 +03:00 [DBG] HealthReportCollector - health report execution history saved.
2022-08-28 16:31:08.623 +03:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2022-08-28 16:31:08.624 +03:00 [INF] Saved 4 entities to in-memory store.
2022-08-28 16:31:08.624 +03:00 [DBG] HealthReportCollector has completed.
2022-08-28 16:31:08.624 +03:00 [DBG] HealthCheck collector HostedService executed successfully.
